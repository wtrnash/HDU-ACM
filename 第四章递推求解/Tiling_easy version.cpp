/**********************************************************************************************************************************
Problem Description
有一个大小是 2 x n 的网格，现在需要用2种规格的骨牌铺满，骨牌规格分别是 2 x 1 和 2 x 2，请计算一共有多少种铺设的方法。
Input
输入的第一行包含一个正整数T（T<=20），表示一共有 T组数据，接着是T行数据，每行包含一个正整数N（N<=30），表示网格的大小是2行N列。
Output
输出一共有多少种铺设的方法，每组数据的输出占一行。<br>
Sample Input
3
2
8
12
Sample Output
3
171
2731
************************************************************************************************************************************/ 
//递推求解，第n（n >= 3）列网格，相当于第n-1列的铺法 加上竖的 2 * 1，以及第n-2列铺法，加上2 * 2或是 横着两个2 *1
//所以 f(i) = f(i - 1 ) + 2 * f(i - 2)
//打表做，并用long long存储 
#include <iostream>
using namespace std;

int main()
{
	long long f[31];
	f[1] = 1;
	f[2] = 3;
	for(int i = 3; i < 31; i++)
		f[i] = f[i - 1] + 2 * f[i - 2];
	int t, n;
	cin >> t;
	while(t--)
	{
		cin >> n;
		cout << f[n] << endl;
	}
	
	return 0;
}

/***************************************************************************
Problem Description
在2×n的一个长方形方格中,用一个1× 2的骨牌铺满方格,输入n ,输出铺放方案的总数.
例如n=3时,为2× 3方格，骨牌的铺放方案有三种
Input
输入数据由多行组成，每行包含一个整数n,
表示该测试实例的长方形方格的规格是2×n (0<n<=50)。
Output
对于每个测试实例，请输出铺放方案的总数，每个实例的输出占一行。
Sample Input
1
3
2
Sample Output
1
3
2
*****************************************************************************/
//简单的递推题，第2 * i（i >= 3)个长方形方格的铺法等于第2 * （i-1）个长方形加上一个竖的长方形
//以及2 * (i - 2) 个长方形加上两个横着的长方形，所以f(i) = f(i - 1) + f(i-2)
//用打表做，并用long long储存防止溢出 
#include <iostream>
using namespace std;

int main()
{
	long long f[51];
	f[1] = 1;
	f[2] = 2;
	for(int i = 3; i < 51; i++)
		f[i] = f[i - 1] + f[i - 2];
	
	int n;
	while(cin >> n)
		cout << f[n] << endl;
		
	return 0;
}

/******************************************************************************************************
Problem Description
话说上回讲到海东集团推选老总的事情，最终的结果是XHD以微弱优势当选，
从此以后，“徐队”的称呼逐渐被“徐总”所取代，海东集团（HDU）也算是名副其实了。
创业是需要地盘的，HDU向钱江肉丝高新技术开发区申请一块用地，很快得到了批复，
据说这是因为他们公司研发的“海东牌”老鼠药科技含量很高，预期将占全球一半以上的市场。
政府划拨的这块用地是一个多边形，为了描述它，我们用逆时针方向的顶点序列来表示，
我们很想了解这块地的基本情况，现在请你编程判断HDU的用地是凸多边形还是凹多边形呢？
Input
输入包含多组测试数据，每组数据占2行，首先一行是一个整数n，
表示多边形顶点的个数，然后一行是2×n个整数，表示逆时针顺序的n个顶点的坐标（xi,yi），n为0的时候结束输入。
Output
对于每个测试实例，如果地块的形状为凸多边形，请输出“convex”,否则输出”concave”，每个实例的输出占一行。
Sample Input
4
0 0 1 0 1 1 0 1
0
Sample Output
convex
********************************************************************************************************/
//运用叉乘来判断是否是凸多边形。因为凸多边形的 一条边之后的另一条边一定是左转的，一旦有一次右转，即为凹多边形。
//用叉乘判断，如果左转，叉乘则为正，右转，叉乘为负，即可判断 
#include <iostream>
#include <vector>
using namespace std;

struct Point	//点的类，存储x,y 
{
	int x;
	int y;	
};

vector <Point> v;	//动态数组存储点 
int main()
{
	bool isConvex;
	int n;
	Point temp;
	Point p1, p2;
	cin >> n;
	while(n != 0)
	{
		isConvex = true;
		v.clear();
		for(int i = 0;i < n; i++)	//读入 
		{
			cin >> temp.x >> temp.y;
			v.push_back(temp);
		}
		
		for(int i = 0; i < n; i++)
		{
			if(i < n - 2)	//i小于n-2时，后面的两个点不会数组越界 
			{
				p1.x = v[i + 1].x - v[i].x;
				p1.y = v[i + 1].y - v[i].y;
				p2.x = v[i + 2].x - v[i + 1].x;
				p2.y = v[i + 2].y - v[i + 1].y;
			}
			else if(i == n - 2)		// 等于n-2时， 是倒数第一个点和倒数第二个点做向量，以及第一个点和倒数第一个点做向量 
			{
				p1.x = v[i + 1].x - v[i].x;
				p1.y = v[i + 1].y- v[i].y;
				p2.x = v[0].x - v[i + 1].x;
				p2.y = v[0].y - v[i + 1].y;
			}
			else							//等于n-1时，第一个点和倒数第一个做向量，第二个点和第一个点做向量 
			{
				p1.x = v[0].x - v[i].x;
				p1.y = v[0].y- v[i].y;
				p2.x = v[1].x - v[0].x;
				p2.y = v[1].y - v[0].y;
			}
			
			if(p1.x * p2.y - p2.x * p1.y < 0)	//判断叉乘是否小于0，一旦有一个小于零，表示有右转，即为凹多边形，修改flag，跳出。 
			{
				isConvex = false;
				break;
			}
		
		}
		
		if(isConvex)
			cout << "convex" << endl;
		else
			cout << "concave" << endl;
	
		cin >> n;
	}
	return 0;	
} 

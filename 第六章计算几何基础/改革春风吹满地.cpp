/****************************************************************************************************************** 
Problem Description
“改革春风吹满地,不会AC没关系;实在不行回老家，还有一亩三分地。谢谢!（乐队奏乐）”
话说部分学生心态极好，每天就知道游戏，这次考试如此简单的题目，也是云里雾里，而且，还竟然来这么几句打油诗。
好呀，老师的责任就是帮你解决问题，既然想种田，那就分你一块地。
这块田位于浙江省温州市苍南县灵溪镇林家铺子村，多边形形状的一块地，原本是linle 的，现在就准备送给你了。
不过，任何事情都没有那么简单，你必须首先告诉我这块地到底有多少面积，如果回答正确才能真正得到这块地。
发愁了吧？就是要让你知道，种地也是需要AC知识的！以后还是好好练吧...
Input
输入数据包含多个测试实例，每个测试实例占一行，每行的开始是一个整数n(3<=n<=100)，它表示多边形的边数（当然也是顶点数），
然后是按照逆时针顺序给出的n个顶点的坐标（x1, y1, x2, y2... xn, yn）,为了简化问题，这里的所有坐标都用整数表示。
输入数据中所有的整数都在32位整数范围内，n=0表示数据的结束，不做处理。
Output
对于每个测试实例，请输出对应的多边形面积，结果精确到小数点后一位小数。每个实例的输出占一行。
Sample Input
3 0 0 1 0 0 1
4 1 0 0 1 -1 0 0 -1
0
Sample Output
0.5
2.0
*********************************************************************************************************************/
//将多边形分成n个三角形，用叉乘计算每个三角形面积后求和即可。 
#include <iostream>
#include <iomanip>
using namespace std;

struct Point	//存储点的类 
{
	int x;
	int y;	
}points[101];

double getArea(int n)	//计算多边形面积 
{
	double area = 0;
	Point p, s;                     //默认取另外一点（0,0）分别和p,s组成向量，于是p,s的坐标值等于向量坐标值 
	p.x = points[0].x;			
	p.y = points[0].y;
	for(int i = 1; i <= n; i++)	 //第一次做叉乘，取第一个点和(0,0)组成的向量p  与  第二点和（0,0）组成的向量s做叉乘 。然后第二点和第三点做叉乘，以此类推 
	{                                       //直到 p取最后一点时，s取第一个点 
		if(i == n)					//p取最后一点时，s取第一点 
		{
			s.x = points[0].x;
			s.y = points[0].y; 
		}	
		else						//否则s取当前点 
		{
			s.x = points[i].x;
			s.y = points[i].y;
		}
		
		area += (p.x * s.y - s.x * p.y) / 2.0; 			//叉乘除2计算三角形面积 
		p.x = s.x;					// p更新为下一点 
		p.y = s.y; 
	} 
	
	return area;
}

int main()
{
	int n;
	cin >> n;
	while(n != 0)
	{
		for(int i = 0; i < n; i++)		//读入 
			cin >> points[i].x >> points[i].y;
	
		cout << fixed << setprecision(1) << getArea(n) << endl;		//输出 
		cin >> n;
	}
	return 0;	
} 
